<!doctype html>
<!--
  ~ Copyright (c) 2013-2016, Centre for Genomic Regulation (CRG).
  ~ Copyright (c) 2013-2016, Paolo Di Tommaso and the respective authors.
  ~
  ~   This file is part of 'Nextflow'.
  ~
  ~   Nextflow is free software: you can redistribute it and/or modify
  ~   it under the terms of the GNU General Public License as published by
  ~   the Free Software Foundation, either version 3 of the License, or
  ~   (at your option) any later version.
  ~
  ~   Nextflow is distributed in the hope that it will be useful,
  ~   but WITHOUT ANY WARRANTY; without even the implied warranty of
  ~   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  ~   GNU General Public License for more details.
  ~
  ~   You should have received a copy of the GNU General Public License
  ~   along with Nextflow.  If not, see <http://www.gnu.org/licenses/>.
  -->

<html>
<head>
<script type="text/javascript">
var prot = (("https:" == document.location.protocol) ? "https://" : "http://");
document.write(unescape("%3Cscript src='" + prot + "code.jquery.com/jquery-latest.min.js' type='text/javascript' %3E%3C/script%3E"));
document.write(unescape("%3Cscript src='" + prot + "d3js.org/d3.v3.min.js' charset='utf-8' type='text/javascript' %3E%3C/script%3E"));
document.write(unescape("%3Cscript src='" + prot + "cdn.rawgit.com/nextflow-io/d3-timeline/82622c4cc35bac7283b3a317826b0709ac1ae476/src/d3-timeline.js' type='text/javascript' %3E%3C/script%3E"));
document.write(unescape("%3Clink href='" + prot + "fonts.googleapis.com/css?family=Lato' rel='stylesheet' type='text/css' %3E%3C/link%3E"));
</script>
<style type="text/css">
* {
  font-family: 'Lato', 'Helvetica Neue', Arial, Helvetica, sans-serif;
}

.axis path,
.axis line {
fill: none;
  stroke: black;
  shape-rendering: crispEdges;
}

.axis text {
  font-size: 10px;
}

div#timeline g text {
  font-size: 13px;
}

text.timeline-label {
  font-size: 13px;
}

#timeline2 .axis {
  transform: translate(0px,30px);
  -ms-transform: translate(0px,30px); /* IE 9 */
  -webkit-transform: translate(0px,30px); /* Safari and Chrome */
  -o-transform: translate(0px,30px); /* Opera */
  -moz-transform: translate(0px,30px); /* Firefox */
}

.coloredDiv {
  height:20px; width:20px; float:left;
}

#footer {
  padding-top: 3em; color: #bfbfbf; font-size: 13px;
}

#footer a:visited {
  color: #bfbfbf;
  text-decoration: underline;
}
</style>
<script type="text/javascript">
var handler=null;
// see https://github.com/mbostock/d3/wiki/Ordinal-Scales#category20c
var colors = d3.scale.category20c().domain(d3.range(0,20)).range()

function c1(index) { return "#bdbdbd"; }
function c2(index) { return colors[index % 16]; } // <-- note: uses only the first 16 colors

var elapsed="1m 1s"
var beginningMillis=1462267583981;
var endingMillis=1462267645307;
var data=[
{"label": "bed (1)", "times": [{"starting_time": 1462267587772, "ending_time": 1462267587874, "color":c1(0)}, {"starting_time": 1462267587874, "ending_time": 1462267589921, "color":c2(0), "label": "2.1s \/ -"}]},
{"label": "split_bed (1)", "times": [{"starting_time": 1462267590097, "ending_time": 1462267590121, "color":c1(1)}, {"starting_time": 1462267590121, "ending_time": 1462267590336, "color":c2(1), "label": "2.1s \/ 79.1 MB"}, {"starting_time": 1462267590336, "ending_time": 1462267592199, "color":c1(1)}]},
{"label": "samtools_mpileup (17_7572814-17_7576907_regions)", "times": [{"starting_time": 1462267592720, "ending_time": 1462267592801, "color":c1(2)}, {"starting_time": 1462267592801, "ending_time": 1462267604069, "color":c2(2), "label": "14.9s \/ 140.7 MB"}, {"starting_time": 1462267604069, "ending_time": 1462267607579, "color":c1(2)}]},
{"label": "samtools_mpileup (17_7576908-17_7578280_regions)", "times": [{"starting_time": 1462267592731, "ending_time": 1462267592803, "color":c1(2)}, {"starting_time": 1462267592803, "ending_time": 1462267606279, "color":c2(2), "label": "16.8s \/ 148.3 MB"}, {"starting_time": 1462267606279, "ending_time": 1462267609520, "color":c1(2)}]},
{"label": "samtools_mpileup (17_7579418-17_7579962_regions)", "times": [{"starting_time": 1462267592783, "ending_time": 1462267592901, "color":c1(2)}, {"starting_time": 1462267592901, "ending_time": 1462267601150, "color":c2(2), "label": "11.6s \/ 140.7 MB"}, {"starting_time": 1462267601150, "ending_time": 1462267604352, "color":c1(2)}]},
{"label": "samtools_mpileup (17_7578281-17_7579417_regions)", "times": [{"starting_time": 1462267592806, "ending_time": 1462267592904, "color":c1(2)}, {"starting_time": 1462267592904, "ending_time": 1462267604505, "color":c2(2), "label": "14.8s \/ 146.5 MB"}, {"starting_time": 1462267604505, "ending_time": 1462267607642, "color":c1(2)}]},
{"label": "mpileup2table (17_7579418-17_7579962_regions)", "times": [{"starting_time": 1462267604622, "ending_time": 1462267604679, "color":c1(3)}, {"starting_time": 1462267604679, "ending_time": 1462267613185, "color":c2(3), "label": "12.6s \/ 44.7 MB"}, {"starting_time": 1462267613185, "ending_time": 1462267617206, "color":c1(3)}]},
{"label": "mpileup2table (17_7572814-17_7576907_regions)", "times": [{"starting_time": 1462267607818, "ending_time": 1462267607940, "color":c1(3)}, {"starting_time": 1462267607940, "ending_time": 1462267627225, "color":c2(3), "label": "22.4s \/ 44.8 MB"}, {"starting_time": 1462267627225, "ending_time": 1462267630226, "color":c1(3)}]},
{"label": "mpileup2table (17_7578281-17_7579417_regions)", "times": [{"starting_time": 1462267607848, "ending_time": 1462267607943, "color":c1(3)}, {"starting_time": 1462267607943, "ending_time": 1462267625079, "color":c2(3), "label": "20.3s \/ 44.6 MB"}, {"starting_time": 1462267625079, "ending_time": 1462267628173, "color":c1(3)}]},
{"label": "mpileup2table (17_7576908-17_7578280_regions)", "times": [{"starting_time": 1462267609618, "ending_time": 1462267609721, "color":c1(3)}, {"starting_time": 1462267609721, "ending_time": 1462267627320, "color":c2(3), "label": "20.8s \/ 44.7 MB"}, {"starting_time": 1462267627320, "ending_time": 1462267630392, "color":c1(3)}]},
{"label": "R_regression (17_7579418-17_7579962_regions)", "times": [{"starting_time": 1462267617402, "ending_time": 1462267617508, "color":c1(4)}, {"starting_time": 1462267617508, "ending_time": 1462267628871, "color":c2(4), "label": "15.2s \/ 115.5 MB"}, {"starting_time": 1462267628871, "ending_time": 1462267632567, "color":c1(4)}]},
{"label": "R_regression (17_7578281-17_7579417_regions)", "times": [{"starting_time": 1462267628295, "ending_time": 1462267628373, "color":c1(4)}, {"starting_time": 1462267628373, "ending_time": 1462267630538, "color":c2(4), "label": "5.8s \/ 105 MB"}, {"starting_time": 1462267630538, "ending_time": 1462267634079, "color":c1(4)}]},
{"label": "R_regression (17_7572814-17_7576907_regions)", "times": [{"starting_time": 1462267630380, "ending_time": 1462267630433, "color":c1(4)}, {"starting_time": 1462267630433, "ending_time": 1462267638707, "color":c2(4), "label": "12.5s \/ 113.2 MB"}, {"starting_time": 1462267638707, "ending_time": 1462267642907, "color":c1(4)}]},
{"label": "R_regression (17_7576908-17_7578280_regions)", "times": [{"starting_time": 1462267630541, "ending_time": 1462267630593, "color":c1(4)}, {"starting_time": 1462267630593, "ending_time": 1462267638302, "color":c2(4), "label": "11.8s \/ 117.3 MB"}, {"starting_time": 1462267638302, "ending_time": 1462267642339, "color":c1(4)}]},
{"label": "collect_vcf_result (1)", "times": [{"starting_time": 1462267643018, "ending_time": 1462267643108, "color":c1(5)}, {"starting_time": 1462267643108, "ending_time": 1462267643216, "color":c2(5), "label": "2.3s \/ 19.6 MB"}, {"starting_time": 1462267643216, "ending_time": 1462267645280, "color":c1(5)}]}
]


function getTickFormat() {
  var MIN = 1000 * 60
  var HOUR = MIN * 60
  var DAY = HOUR * 24
  var delta = (endingMillis - beginningMillis)

  if( delta < 2 * MIN ) {
    return {
      format: d3.time.format("%S"),
      tickTime: d3.time.seconds,
      tickInterval: 5,
      tickSize: 6
    }
  }

  if( delta < 2 * HOUR ) {
    return {
      format: d3.time.format("%M"),
      tickTime: d3.time.minutes,
      tickInterval: 5,
      tickSize: 6
    }
  }

  if( delta < 2 * DAY ) {
    return {
      format: d3.time.format("%H:%M"),
      tickTime: d3.time.hours,
      tickInterval: 1,
      tickSize: 6
    }
  }

  return {
    format: d3.time.format("%b %e %H:%M"),
    tickTime: d3.time.hours,
    tickInterval: 6,
    tickSize: 6
  }
}

function getLabelMargin(scale=0.85) {
    $('<span class="labelSpan" style="display: none"></span>').appendTo('body');

    var labelMargin = 0
    $.each(data, function (key, value) {
      labelMargin = Math.max(labelMargin, $('.labelSpan').html(value.label).width());
    });

    $('.labelSpan').remove();

    return (labelMargin * scale);
}

function render() {
  handler=null;
  $("#timeline").empty()
  $('#label_elapsed').text(elapsed)
  $('#label_launch').text( d3.time.format('%d %b %Y %H:%M')(new Date(beginningMillis)) )

  var width = $(window).width();
  var chart = d3.timeline()
    .stack() // toggles graph stacking
    .margin({left:getLabelMargin(), right:100, top:0, bottom:0})
    .tickFormat( getTickFormat() )
    .rowSeperators('#f5f5f5')
    .showTimeAxisTick()
    ;
  var svg = d3.select("#timeline").append("svg").attr("width", width).datum(data).call(chart);
}

function hrz() {
if( handler != null ) clearTimeout(handler)
  handler = setTimeout(render, 150);
}

$(document).ready(render)
$(window).resize(hrz); // resize the applet on window resize
</script>
</head>

<body>
<div>
  <h3>Processes execution timeline</h3>
  <p>
    Launch time: <span id='label_launch'> </span><br>
    Elapsed time: <span id='label_elapsed'> </span>
  </p>
  <div id="timeline"></div>
</div>

<div id='footer'>
  Created with Nextflow -- <a href='http://www.nextflow.io' target='_blank'>http://nextflow.io</a>
</div>
</body>
</html>